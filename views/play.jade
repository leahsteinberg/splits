html.
	<div id="anchor"></div>
	<script src="http://localhost:8040/socket.io/socket.io.js"></script>
	<script src="http://fb.me/react-0.10.0.js"></script>
	<script src="http://fb.me/JSXTransformer-0.10.0.js"></script>
	<script src="http://code.jquery.com/jquery-1.10.0.min.js"></script>
	<script src="/socket.io/socket.io.js"></script>
	<script type="text/jsx">
		/** @jsx React.DOM */
		var socket = io.connect();
		var increment=1;

		var getBalance = function(person, items, payments){
			var person_owns=0;
			var person_paid = 0;
			for(var i=0; i< items.length; i++){
				for(var j =0; j< items[i].people.length; j++){
				console.log(items[i]['item_name']);
					if(person === items[i].people[j].person_name){
						person_owns+=(items[i].people[j].percent_owned/100)*items[i].price;
						person_paid+=(items[i].people[j].percent_paid/100)*items[i].price;
					}
			}
			}
			var payment_balance =0;
			console.log(person);
			for(var i =0; i<payments.length; i++){
				console.log(payments);
				if(person === payments[i].payment_to){
					console.log(payments[i].price);
					payment_balance+=parseInt(payments[i].price);
					console.log("pb to, ", payment_balance, person);

				}
				else if(person === payments[i].payment_from){
					payment_balance-=payments[i].price;
					console.log("pb from, ", payment_balance, person);

				}
			}
			return person_owns-person_paid+payment_balance;
		};

		var getPeople = function(items){
		console.log("in get people");
			var peopleSet = {};
			for(var i = 0; i< items.length; i++){
				for(var j = 0; j< items[i]['people'].length; j++){
					var person = items[i]['people'][j]['person_name'];
					if(peopleSet[person]=== undefined){
						peopleSet[person] = 'here';
					}
				}
			}
			peopleArray = []
			for(personString in peopleSet){
				if(peopleSet.hasOwnProperty(personString)){
					peopleArray.push(personString);
				}
			}
			return peopleArray;
		}

		var SplitsiesModule = React.createClass({
			getInitialState: function(){
				return (
				{'items':[
					{'key': 0, 'item_name': 'peanut butter', 'price': 30, 'people':[
							{'key': 0, 'person_name': 'Sarah', 'percent_owned': 50, 'percent_paid': 100},
							{'key': 1, 'person_name': 'Rachel', 'percent_owned': 50, 'percent_paid':0}
							]}],
							'item_name': '', 'item_price': '', 'payment_to': '', 'payment_price': '', 'payments': []
					});
			},
			loadItemsFromServer: function(){
				var that = this;
				socket.on('message', function(data){
				//	that.setState({});
				});
			},
			componentWillMount: function(){
				console.log(this.state);
			},
			handlePaymentSubmit: function(e){
				increment+=1;
				this.state.payments.push({'key': increment, 'payment_to': this.state.payment_to, 'price': this.state.payment_price, 'payment_from': 'Rachel'});
				this.setState({'payment_to': ''});
				this.setState({'payment_price': ''});
				console.log(this.state);
				e.preventDefault();
			},
			handleItemSubmit: function(e){
				//verify validity of items here
				increment+=1;
				this.state.items.push({'key': increment, 'item_name': this.state.item_name, 'price': this.state.item_price
				, 'people':[
							{'key': 0, 'person_name': 'Sarah', 'percent_owned': 50, 'percent_paid': 100},
							{'key': 1, 'person_name': 'Rachel', 'percent_owned': 50, 'percent_paid':0}
							]});
				this.setState({'item_name': ''});
				this.setState({'item_price': ''});
				/// will go in render later
				e.preventDefault();
			},
			handleChange: function(name, e){
				if(name === 'item_name'){
					this.setState({'item_name': e.target.value});
				}
				else if(name === 'item_price'){
					this.setState({'item_price': e.target.value});
				}
				else if(name === 'payment_to'){
					this.setState({'payment_to': e.target.value});

				}
				else if(name === 'payment_price'){
					this.setState({'payment_price': e.target.value});

				}
			},
			render: function(){
				return (<div>
						<Items info={this.state}/>
						<People info={this.state}/>
						<newItem handleItemSubmit={this.handleItemSubmit} onChange={this.handleChange}
						item_name={this.state.item_name} item_price={this.state.item_price}/>
						<newPayment handlePaymentSubmit={this.handlePaymentSubmit} onChange={this.handleChange}  payment_to={this.state.payment_to} payment_price={this.state.payment_price}/>
						</div>);
			}
		});
			
		var Items = React.createClass({
			render: function(){
				var items = this.props.info.items.map(function(item){
					return (<Item item_name={item.item_name}  price={item.price}/>);
				});
				return (<div><p>Here's the items:</p>{items}</div>);
			}
		});

		var Item = React.createClass({
			render: function(){
					return(<div>{this.props.item_name}, ${this.props.price}</div>);
			}
		});

		var People = React.createClass({
			render: function(){
				var people_set = [];
				var items = this.props.info.items;
				var payments = this.props.info.payments;
				var peopleSet = getPeople(items);
				var peopleComponents = peopleSet.map(function(person){
					var balance = getBalance(person, items, payments);
					return (<Person person_name={person} balance={balance}/>);
				});
				return (<div><p>Here's the people:</p>{peopleComponents}</div>);
			}
		});


		var Person = React.createClass({
			render: function(){
				return (<div>{this.props.person_name}, ${this.props.balance}</div>);
			}
		});

		var newItem = React.createClass({
			render: function(){
				return (<div>
					<form onSubmit={this.props.handleItemSubmit}> I bought
						<input type ="text"  value={this.props.item_name} 
						onChange={this.props.onChange.bind(this, 'item_name')}>
						for this much: </input>
						<input type ="text" value={this.props.item_price} onChange={this.props.onChange.bind(this, 'item_price')}></input>
						<button>new item</button>
					</form>
				</div>);
			}
		});

		var newPayment = React.createClass({
			render: function(){
				return (<div>
				<form onSubmit={this.props.handlePaymentSubmit}> I paid
					<input type ="text" value={this.props.payment_to} onChange={this.props.onChange.bind(this, 'payment_to')}> this much: </input>
					<input type ="text" value={this.props.payment_price} onChange={this.props.onChange.bind(this, 'payment_price')}></input>
					<button>new payment</button>
					</form>
				</div>);
			}
		});




		React.renderComponent(<SplitsiesModule/>, document.getElementById("anchor"));
	</script>
	</body>
	</html>